tinymce.PluginManager.add('embed', function(editor) {
  var openDialog = function() {
    editor.windowManager.open({
      title: 'EMBED & IFRAME',
      body: [
        
        {
          type: 'textbox',
          name: 'url',
          label: 'Iframe URL',
          value: ''
        },
        
        {
          type: 'checkbox',
          name: 'fullscreen',
          label: 'Fullscreen',
          checked: false
        },
       
        {
          type: 'textbox',
          name: 'iframeWidth',
          label: 'Width',
          value: ''
        },
        {
          type: 'textbox',
          name: 'iframeHeight',
          label: 'Height',
          value: ''
        },
        {
          type: 'checkbox',
          name: 'isIframe',
          label: '⚠️ Disable Embed',
          checked: true
        },
        {
          type: 'textbox',
          name: 'embedCode',
          label: 'Embed Code',
          value: '',
          inputClass: 'embed-code-input'
        },
       
        {
          type: 'textbox',
          name: 'embedWidth',
          label: 'Width',
          value: ''
        },
        {
          type: 'textbox',
          name: 'embedHeight',
          label: 'Height',
          value: ''
        }
      ],
      onsubmit: function(e) {
        var data = e.data;
        var url = data.url;
        var isIframe = data.isIframe;
        var fullscreen = data.fullscreen;
        var iframeWidth = data.iframeWidth;
        var iframeHeight = data.iframeHeight;
        var embedCode = data.embedCode;
        var embedWidth = data.embedWidth;
        var embedHeight = data.embedHeight;

        if (isIframe) {
          // Construct the iframe HTML code based on the input values
          var iframeCode = '<iframe src="' + url + '"';
          if (fullscreen) {
            iframeCode += ' style="width: 100vw; height: 100vh; border: none;"';
          } else {
            if (iframeWidth) {
              iframeCode += ' width="' + iframeWidth + '"';
            }
            if (iframeHeight) {
              iframeCode += ' height="' + iframeHeight + '"';
            }
            iframeCode += ' style="border: none;"';
          }
          iframeCode += '></iframe>';

          // Insert the iframe HTML code into the editor
          editor.insertContent(iframeCode);
        } else {
          // Construct the embed code with dimension attributes
          var embedCodeWithDimensions = embedCode;

          if (embedWidth) {
            embedCodeWithDimensions = embedCodeWithDimensions.replace(/width="[^"]*"/i, 'width="' + embedWidth + '"');
          }

          if (embedHeight) {
            embedCodeWithDimensions = embedCodeWithDimensions.replace(/height="[^"]*"/i, 'height="' + embedHeight + '"');
          }

          // Insert the modified embed code into the editor
          editor.insertContent(embedCodeWithDimensions);
        }
      }
    });
  };

  // Add a button that opens the dialog for inserting media
  editor.addButton('embed', {
    text: 'IFRAME/EMBED',
    onclick: openDialog
  });
});
